/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package br.univel.trabalho.GUI;

import java.util.Date;
import java.util.GregorianCalendar;
import java.util.LinkedList;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import br.univel.trabalho.Classes.Banco;
import br.univel.trabalho.Classes.Cliente;
import br.univel.trabalho.Classes.DAO.DAOLocacao;
import br.univel.trabalho.Classes.Filme;
import br.univel.trabalho.Classes.Locacao;

/**
 *
 * @author USER
 */
public class LocacaoGUI extends javax.swing.JDialog {

	public static LinkedList<Filme> tabela;
	public static Filme f;
	Locacao l;

	TFilmePocket m = new TFilmePocket();
	TLocacoes m2 = new TLocacoes();

	public LocacaoGUI(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();

		tabela = new LinkedList<>();
		txtVtotal.setEnabled(false);
		Banco.listCbx(cbxCliente, "Cliente");
		Banco.listCbx(cbxFilmes, "Filme");
		tbFilme.setModel(m);
		tbL.setModel(m2);
		remove.setEnabled(false);
		tabela.clear();
		cbxSituacao.setEnabled(false);

		atualizar.setEnabled(false);
		remover.setEnabled(false);
		dtaEmprestimo.setEnabled(false);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jScrollPane2 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();
		jLabel1 = new javax.swing.JLabel();
		cbxCliente = new javax.swing.JComboBox();
		jLabel2 = new javax.swing.JLabel();
		cbxFilmes = new javax.swing.JComboBox();
		add = new javax.swing.JButton();
		jLabel3 = new javax.swing.JLabel();
		dtaDevolucao = new javax.swing.JFormattedTextField();
		jLabel4 = new javax.swing.JLabel();
		cbxSituacao = new javax.swing.JComboBox();
		jLabel5 = new javax.swing.JLabel();
		txtVtotal = new javax.swing.JTextField();
		jLabel6 = new javax.swing.JLabel();
		txtVpago = new javax.swing.JTextField();
		jButton1 = new javax.swing.JButton();
		atualizar = new javax.swing.JButton();
		remover = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		tbFilme = new javax.swing.JTable();
		remove = new javax.swing.JButton();
		jScrollPane3 = new javax.swing.JScrollPane();
		tbL = new javax.swing.JTable();
		calcular = new javax.swing.JButton();
		jLabel7 = new javax.swing.JLabel();
		dtaEmprestimo = new javax.swing.JFormattedTextField();
		limpar = new javax.swing.JButton();
		jLabel8 = new javax.swing.JLabel();

		jTable1.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { null, null, null, null },
						{ null, null, null, null }, { null, null, null, null },
						{ null, null, null, null } }, new String[] { "Title 1",
						"Title 2", "Title 3", "Title 4" }));
		jScrollPane2.setViewportView(jTable1);

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		jLabel1.setText("Cliente:");

		jLabel2.setText("Filmes:");

		add.setText("Add");
		add.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				addActionPerformed(evt);
			}
		});

		jLabel3.setText("Data de Devolução:");

		try {
			dtaDevolucao
					.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
							new javax.swing.text.MaskFormatter("##/##/####")));
		} catch (java.text.ParseException ex) {
			ex.printStackTrace();
		}

		jLabel4.setText("Situação:");

		cbxSituacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] {
				"Ativo", "Cancelado", "Entregue", "Perdido" }));

		jLabel5.setText("Valor Total:");

		jLabel6.setText("Valor Pago:");

		jButton1.setText("Salvar");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		atualizar.setText("Atualizar");
		atualizar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				atualizarActionPerformed(evt);
			}
		});

		remover.setText("Remover");
		remover.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				removerActionPerformed(evt);
			}
		});

		tbFilme.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { null, null, null, null },
						{ null, null, null, null }, { null, null, null, null },
						{ null, null, null, null } }, new String[] { "Title 1",
						"Title 2", "Title 3", "Title 4" }));
		tbFilme.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				tbFilmeMouseClicked(evt);
			}
		});
		jScrollPane1.setViewportView(tbFilme);

		remove.setText("Remove");
		remove.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				removeActionPerformed(evt);
			}
		});

		tbL.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {
				{ null, null, null, null }, { null, null, null, null },
				{ null, null, null, null }, { null, null, null, null } },
				new String[] { "Title 1", "Title 2", "Title 3", "Title 4" }));
		tbL.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				tbLMouseClicked(evt);
			}
		});
		jScrollPane3.setViewportView(tbL);

		calcular.setText("Calcular");
		calcular.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				calcularActionPerformed(evt);
			}
		});

		jLabel7.setText("Data de Empréstimo:");

		try {
			dtaEmprestimo
					.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
							new javax.swing.text.MaskFormatter("##/##/####")));
		} catch (java.text.ParseException ex) {
			ex.printStackTrace();
		}

		limpar.setText("Limpar");
		limpar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				limparActionPerformed(evt);
			}
		});

		jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
		jLabel8.setText("Locação");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jScrollPane3,
						javax.swing.GroupLayout.DEFAULT_SIZE, 571,
						Short.MAX_VALUE)
				.addGroup(
						layout.createSequentialGroup()
								.addGap(46, 46, 46)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jLabel2)
												.addGroup(
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.TRAILING,
																				false)
																				.addGroup(
																						layout.createSequentialGroup()
																								.addComponent(
																										jLabel6)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																								.addComponent(
																										txtVpago))
																				.addGroup(
																						javax.swing.GroupLayout.Alignment.LEADING,
																						layout.createSequentialGroup()
																								.addComponent(
																										jLabel5)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																								.addComponent(
																										txtVtotal,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										65,
																										javax.swing.GroupLayout.PREFERRED_SIZE)))
																.addGap(26, 26,
																		26)
																.addComponent(
																		calcular))
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		jLabel4)
																.addGap(20, 20,
																		20)
																.addComponent(
																		cbxSituacao,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE))
												.addGroup(
														layout.createSequentialGroup()
																.addGap(55, 55,
																		55)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.TRAILING)
																				.addComponent(
																						remove)
																				.addGroup(
																						layout.createSequentialGroup()
																								.addComponent(
																										cbxFilmes,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										javax.swing.GroupLayout.DEFAULT_SIZE,
																										javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addGap(16,
																										16,
																										16)
																								.addComponent(
																										add)))
																.addGap(47, 47,
																		47)
																.addComponent(
																		jScrollPane1,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		148,
																		javax.swing.GroupLayout.PREFERRED_SIZE))
												.addGroup(
														layout.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																false)
																.addGroup(
																		javax.swing.GroupLayout.Alignment.LEADING,
																		layout.createSequentialGroup()
																				.addGap(15,
																						15,
																						15)
																				.addComponent(
																						jButton1)
																				.addGap(18,
																						18,
																						18)
																				.addComponent(
																						atualizar)
																				.addGap(26,
																						26,
																						26)
																				.addComponent(
																						remover)
																				.addPreferredGap(
																						javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						Short.MAX_VALUE)
																				.addComponent(
																						limpar))
																.addGroup(
																		javax.swing.GroupLayout.Alignment.LEADING,
																		layout.createSequentialGroup()
																				.addGroup(
																						layout.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																								.addGroup(
																										layout.createSequentialGroup()
																												.addComponent(
																														jLabel3)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														dtaDevolucao,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														80,
																														javax.swing.GroupLayout.PREFERRED_SIZE))
																								.addGroup(
																										layout.createSequentialGroup()
																												.addComponent(
																														jLabel1)
																												.addGap(18,
																														18,
																														18)
																												.addComponent(
																														cbxCliente,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														javax.swing.GroupLayout.PREFERRED_SIZE)))
																				.addGap(18,
																						18,
																						18)
																				.addGroup(
																						layout.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																								.addComponent(
																										jLabel8)
																								.addGroup(
																										layout.createSequentialGroup()
																												.addComponent(
																														jLabel7)
																												.addPreferredGap(
																														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																												.addComponent(
																														dtaEmprestimo,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														80,
																														javax.swing.GroupLayout.PREFERRED_SIZE))))))
								.addGap(0, 0, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel1)
												.addComponent(
														cbxCliente,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jLabel8))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel3)
												.addComponent(
														dtaDevolucao,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jLabel7)
												.addComponent(
														dtaEmprestimo,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										22, Short.MAX_VALUE)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(
																						jLabel2)
																				.addComponent(
																						cbxFilmes,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						add))
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addComponent(
																		remove))
												.addComponent(
														jScrollPane1,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														80,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel4)
												.addComponent(
														cbxSituacao,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel5)
												.addComponent(
														txtVtotal,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(calcular))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel6)
												.addComponent(
														txtVpago,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jButton1)
												.addComponent(atualizar)
												.addComponent(remover)
												.addComponent(limpar))
								.addGap(33, 33, 33)
								.addComponent(jScrollPane3,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										330,
										javax.swing.GroupLayout.PREFERRED_SIZE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void addActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addActionPerformed

		if (cbxFilmes.getSelectedItem().equals("Nenhum")) {
			JOptionPane.showMessageDialog(rootPane, "Escolha um filme");
			return;
		}
		for (Filme l1 : tabela) {
			if (cbxFilmes.getSelectedItem().equals(l1)) {
				JOptionPane.showMessageDialog(rootPane,
						"Não Adicione filmes repetidos");
				return;
			}
		}
		Filme f = (Filme) cbxFilmes.getSelectedItem();
		tabela.add(f);
		m.fireTableDataChanged();
	}// GEN-LAST:event_addActionPerformed

	private void tbFilmeMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tbFilmeMouseClicked
		if (cbxSituacao.getSelectedItem().equals("Ativo")) {
			remove.setEnabled(true);
			try {
				f = tabela.get(tbFilme.getSelectedRow());
			} catch (IndexOutOfBoundsException e) {

			}
		}
	}// GEN-LAST:event_tbFilmeMouseClicked

	private void removeActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_removeActionPerformed
		tabela.remove(f);
		m.fireTableDataChanged();

		remove.setEnabled(false);
	}// GEN-LAST:event_removeActionPerformed

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		int situacao;
		double vlrF = 0;
		/*
		 * Verifica se a lista de filmes para locar está vazia.
		 */
		if (tabela.size() == 0) {
			JOptionPane.showMessageDialog(null,
					"Você deve escolher pelo menos 1 Filme");
			cbxFilmes.requestFocus();
			return;
		}
		if (cbxCliente.getSelectedItem().equals("Nenhum")) {
			JOptionPane.showMessageDialog(null, "Defina um Cliente");
			cbxCliente.requestFocus();
			return;
		}

		/*
		 * switch(cbxSituacao.getSelectedItem().toString()){ case "Cancelado":
		 * {situacao =0; break;} case "Entregue": {situacao =1; break;} case
		 * "Perdido": {situacao =2; break;} default: situacao = 3; }
		 */
		try {
			vlrF = Double.parseDouble(txtVpago.getText());
		} catch (NumberFormatException e) {
			JOptionPane.showMessageDialog(null, "Insira apenas números");
			txtVpago.requestFocus();
			return;

		}
		for (Filme filme : tabela) {
			if (filme.getQtdDisponivel() == 0) {
				JOptionPane.showMessageDialog(null,
						"Este filme não está Disponível");
				cbxFilmes.removeAllItems();
				Banco.listCbx(cbxFilmes, "Filme");
				return;
			}
		}
		Date d = new Date();
		GregorianCalendar aux = new GregorianCalendar();
		aux.setTime(d);
		if ((DAOLocacao.getData(dtaDevolucao.getText()).getTimeInMillis() - aux
				.getTimeInMillis()) < 0) {
			JOptionPane.showMessageDialog(null, "Digite uma data válida");
			dtaDevolucao.requestFocus();
			return;
		}

		DAOLocacao.setLocacao(
				(Cliente) cbxCliente.getSelectedItem(),
				tabela,
				dtaDevolucao.getText(),
				3,
				DAOLocacao.calculaFilmes(tabela,
						DAOLocacao.getData(dtaDevolucao.getText()), aux), vlrF);

		m2.fireTableDataChanged();
		m.fireTableDataChanged();
		tabela.clear();
		/*
		 * Limpando campos
		 */
		cbxCliente.setSelectedItem("Nenhum");
		cbxFilmes.setSelectedItem("Nenhum");
		dtaDevolucao.setText("");
		cbxSituacao.setSelectedItem("Ativo");
		txtVpago.setText("");
		cbxSituacao.setEnabled(false);
		dtaEmprestimo.setEnabled(false);
		txtVtotal.setText("");
		cbxFilmes.removeAllItems();
		Banco.listCbx(cbxFilmes, "Filme");

	}// GEN-LAST:event_jButton1ActionPerformed

	private void tbLMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tbLMouseClicked
		atualizar.setEnabled(true);
		remover.setEnabled(true);
		dtaEmprestimo.setEnabled(true);
		/*
		 * l recebe a locação que possui a key igual a index da linha
		 * selecionada na tebela tbL
		 */
		l = DAOLocacao.getLocacaoAtivo(tbL.getSelectedRow());
		try {
			dtaDevolucao.setText(Banco.getDataString(l.getDevolucao()));
		} catch (NullPointerException e) {
			return;
		}
		dtaEmprestimo.setText(Banco.getDataString(l.getEmprestimo()));
		cbxCliente.setSelectedItem(l.getC());

		/*
		 * Insere os filmes do Objeto na lista da tela
		 */
		tabela.clear();
		for (Filme filme : l.getFilmes()) { /*
											 * Adiciona filmes a lista de filmes
											 * para locar
											 */
			tabela.add(filme);
		}

		dtaDevolucao
				.setText(l.getDevolucao().get(5) + "/"
						+ (l.getDevolucao().get(2) + 1) + "/"
						+ l.getDevolucao().get(1));

		switch (l.getSituacao()) {
		case 0: {
			cbxSituacao.setSelectedItem("Cancelado");
			break;
		}
		case 1: {
			cbxSituacao.setSelectedItem("Entregue");
			break;
		}
		case 2: {
			cbxSituacao.setSelectedItem("Perdido");
			break;
		}
		default: {
			cbxSituacao.setSelectedItem("Ativo");
			break;
		}
		}

		txtVtotal.setText(Double.toString(l.getVlrtotal()));

		txtVpago.setText(Double.toString(l.getVlrfinal()));
		m.fireTableDataChanged();
		if (l.getSituacao() == 0) {
			cbxCliente.setEnabled(false);
			cbxFilmes.setEnabled(false);
			tbFilme.setEnabled(false);
			txtVpago.setEnabled(false);
			add.setEnabled(false);
			dtaDevolucao.setEnabled(false);
			dtaEmprestimo.setEnabled(false);
			calcular.setEnabled(false);
			cbxSituacao.setEnabled(false);
		} else {
			cbxCliente.setEnabled(true);
			cbxFilmes.setEnabled(true);
			tbFilme.setEnabled(true);
			txtVpago.setEnabled(true);
			add.setEnabled(true);
			dtaDevolucao.setEnabled(true);
			calcular.setEnabled(true);
			cbxSituacao.setEnabled(true);
		}
	}// GEN-LAST:event_tbLMouseClicked

	private void removerActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_removerActionPerformed
		try {
			Locacao l = DAOLocacao.getLocacao(tbL.getSelectedRow());
		} catch (ArrayIndexOutOfBoundsException e) {
			return;
		}
		for (Filme filme : tabela) {
			filme.setQtdDisponivel(filme.getQtdDisponivel() + 1);
		}
		DAOLocacao.deleteLocacao(l);
		m2.fireTableDataChanged();
		atualizar.setEnabled(false);
		remover.setEnabled(false);

		cbxCliente.setSelectedItem("Nenhum");
		cbxFilmes.setSelectedItem("Nenhum");
		dtaDevolucao.setText("");
		cbxSituacao.setEnabled(false);
		cbxSituacao.setSelectedItem("Ativo");
		txtVpago.setText("");
		txtVtotal.setText("");
	}// GEN-LAST:event_removerActionPerformed

	private void atualizarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_atualizarActionPerformed
		if (l == null) {
			/*
			 * Caso o botão seja apertado sem ninguém selecionado
			 * "As vezes buga e acontece"
			 */
			JOptionPane.showMessageDialog(null,
					"Por favor selecione uma Locação");
		} else {
			int i;
			if (cbxSituacao.getSelectedItem().equals("Ativo"))
				i = JOptionPane.showConfirmDialog(rootPane,
						"Deseja realmente alterar esta locação ?");
			else
				i = 0;
			switch (i) {
			case 0: {
				int situacao;
				double vlrF = 0;
				/*
				 * Verifica se a lista de filmes para locar está vazia.
				 */
				if (tabela.size() == 0) {
					JOptionPane.showMessageDialog(null,
							"Você deve escolher pelo menos 1 Filme");
					return;
				}
				switch (cbxSituacao.getSelectedItem().toString()) {
				case "Cancelado": {
					situacao = 0;
					break;
				}
				case "Entregue": {
					situacao = 1;
					break;
				}
				case "Perdido": {
					situacao = 2;
					break;
				}
				default:
					situacao = 3;
				}

				if (situacao == 0 && l.getSituacao() != 0) {
					int o = JOptionPane.showConfirmDialog(null,
							"Tem certeza que deseja cancelar esta locação?");
					switch (o) {
					case 0: {
						for (Filme filme : tabela) {
							filme.setQtdDisponivel(filme.getQtdDisponivel() + 1);
						}
						break;
					}
					case 1:
						return;
					default:
						return;
					}
				}
				if (situacao == 2 && l.getSituacao() != 0) {
					int o = JOptionPane.showConfirmDialog(null,
							"Está locação foi realmente perdida?");
					switch (o) {
					case 0: {
						for (Filme filme : tabela) {
							filme.setQtdDisponivel(filme.getQtdDisponivel() + 1);
						}
						break;
					}
					case 1:
						return;
					default:
						return;
					}
				}

				try {
					vlrF = Double.parseDouble(txtVpago.getText());
				} catch (NumberFormatException e) {
					JOptionPane.showMessageDialog(null,
							"Insira apenas números");
					txtVpago.requestFocus();
					return;

				}
				if (situacao == 1 && l.getSituacao() != 0) {
					int o = JOptionPane.showConfirmDialog(null,
							"Confirma a Entrega da Locação?");
					switch (o) {
					case 0: {
						GregorianCalendar aux = new GregorianCalendar();
						if (dtaEmprestimo.getText().equals("  /  /    ")) {
							Date d = new Date();
							aux.setTime(d);
						} else {
							aux.setTimeInMillis(Banco.getData(
									dtaEmprestimo.getText()).getTimeInMillis());
						}
						txtVtotal
								.setText(Double.toString(DAOLocacao
										.calculaFilmes(tabela,
												DAOLocacao.getData(dtaDevolucao
														.getText()), aux)));
						l.setVlrtotal(Double.parseDouble(txtVtotal.getText()));
						if (l.getVlrtotal() > vlrF) {
							JOptionPane.showMessageDialog(null,
									"Valor a ser Pago "
											+ (l.getVlrtotal() - vlrF));
							txtVpago.requestFocus();
							return;
						}
						for (Filme filme : tabela) {
							filme.setQtdDisponivel(filme.getQtdDisponivel() + 1);
						}
						break;
					}
					case 1:
						return;
					default:
						return;
					}
				}
				/*
				 * Verifica se a locacao Esta Ativa, caso não, ele não calcula
				 * o valor da multa
				 */
				double aux = 0;

				aux = DAOLocacao.calculaFilmes(tabela,
						DAOLocacao.getData(dtaDevolucao.getText()),
						DAOLocacao.getData(dtaEmprestimo.getText()));

				DAOLocacao.updateLocacao(
						(Cliente) cbxCliente.getSelectedItem(), tabela,
						dtaDevolucao.getText(), dtaEmprestimo.getText(),
						situacao, aux, vlrF, l);

				m2.fireTableDataChanged();
				m.fireTableDataChanged();
				tabela.clear();

				atualizar.setEnabled(false);
				remover.setEnabled(false);

				cbxCliente.setSelectedItem("Nenhum");
				cbxFilmes.setSelectedItem("Nenhum");
				dtaDevolucao.setText("");
				cbxSituacao.setSelectedItem("Ativo");
				txtVpago.setText("");
				txtVtotal.setText("");
				dtaEmprestimo.setEnabled(false);
				cbxSituacao.setEnabled(false);
				dtaEmprestimo.setText("");
				l = null;
				return;
			}
			case 1: {
				atualizar.setEnabled(false);
				remover.setEnabled(false);
				l = null;
				return;
			}
			default: {
				atualizar.setEnabled(false);
				remover.setEnabled(false);

				cbxCliente.setSelectedItem("Nenhum");
				cbxFilmes.setSelectedItem("Nenhum");
				dtaDevolucao.setText("");
				cbxSituacao.setSelectedItem("Ativo");
				txtVpago.setText("");
				cbxSituacao.setEnabled(false);
				txtVtotal.setText("");
				l = null;
			}

			}
		}
	}// GEN-LAST:event_atualizarActionPerformed

	private void calcularActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_calcularActionPerformed
		if (dtaDevolucao.getText().equals("  /  /    ")) {
			JOptionPane.showMessageDialog(null, "Digite a Data de devolução");
			dtaDevolucao.requestFocus();
			return;
		}
		if (tabela.size() == 0) {
			JOptionPane.showMessageDialog(null,
					"Você deve escolher pelo menos 1 Filme");
			return;
		}
		GregorianCalendar aux = new GregorianCalendar();
		if (dtaEmprestimo.getText().equals("  /  /    ")) {
			Date d = new Date();
			aux.setTime(d);
		} else {
			aux.setTimeInMillis(Banco.getData(dtaEmprestimo.getText())
					.getTimeInMillis());
		}

		if ((DAOLocacao.getData(dtaDevolucao.getText()).getTimeInMillis()
				- aux.getTimeInMillis() < 0 && l == null)) {
			JOptionPane.showMessageDialog(null, "Digite uma data Válida");
			dtaDevolucao.requestFocus();
			return;
		}

		txtVtotal.setText(Double.toString(DAOLocacao.calculaFilmes(tabela,
				DAOLocacao.getData(dtaDevolucao.getText()), aux)));

	}// GEN-LAST:event_calcularActionPerformed

	private void limparActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_limparActionPerformed
		atualizar.setEnabled(false);
		remover.setEnabled(false);

		cbxCliente.setSelectedItem("Nenhum");
		cbxFilmes.setSelectedItem("Nenhum");
		dtaDevolucao.setText("");
		cbxSituacao.setSelectedItem("Ativo");
		txtVpago.setText("");
		txtVtotal.setText("");
		l = null;
		cbxCliente.setEnabled(true);
		cbxFilmes.setEnabled(true);
		tbFilme.setEnabled(true);
		txtVpago.setEnabled(true);
		add.setEnabled(true);
		dtaDevolucao.setEnabled(true);
		calcular.setEnabled(true);
		cbxSituacao.setEnabled(false);
		tabela.clear();
		m.fireTableDataChanged();
	}// GEN-LAST:event_limparActionPerformed

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed"
		// desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(LocacaoGUI.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(LocacaoGUI.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(LocacaoGUI.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(LocacaoGUI.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				LocacaoGUI dialog = new LocacaoGUI(new javax.swing.JFrame(),
						true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					@Override
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton add;
	private javax.swing.JButton atualizar;
	private javax.swing.JButton calcular;
	private javax.swing.JComboBox cbxCliente;
	static javax.swing.JComboBox cbxFilmes;
	private javax.swing.JComboBox cbxSituacao;
	private javax.swing.JFormattedTextField dtaDevolucao;
	private javax.swing.JFormattedTextField dtaEmprestimo;
	private javax.swing.JButton jButton1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JTable jTable1;
	private javax.swing.JButton limpar;
	private javax.swing.JButton remove;
	private javax.swing.JButton remover;
	private javax.swing.JTable tbFilme;
	private javax.swing.JTable tbL;
	private javax.swing.JTextField txtVpago;
	private javax.swing.JTextField txtVtotal;
	// End of variables declaration//GEN-END:variables

}

class TFilmePocket extends AbstractTableModel {

	@Override
	public int getRowCount() {
		LocacaoGUI l;

		return LocacaoGUI.tabela.size();

	}

	@Override
	public int getColumnCount() {
		return 1;
	}

	@Override
	public String getColumnName(int i) {
		switch (i) {
		default:
			return "Filmes para Locar";
		}
	}

	@Override
	public Object getValueAt(int rowIndex, int columnIndex) {
		Filme f = (Filme) LocacaoGUI.tabela.get(rowIndex);
		switch (columnIndex) {
		default:
			return f;

		}
	}

}

class TLocacoes extends AbstractTableModel {

	@Override
	public int getRowCount() {

		return Banco.getHashAtivo().size();

	}

	@Override
	public int getColumnCount() {
		return 5;
	}

	@Override
	public String getColumnName(int i) {
		switch (i) {
		case 0:
			return "Cliente";
		case 1:
			return "Filmes";
		case 2:
			return "Data de Empréstimo";
		case 3:
			return "Data de Devolução";
		default:
			return "Valor";
		}
	}

	@Override
	public Object getValueAt(int rowIndex, int columnIndex) {
		Locacao loc = DAOLocacao.getLocacaoAtivo(rowIndex);
		switch (columnIndex) {
		case 0:
			return loc.getC();
		case 1:
			return loc.getFilmes().size();
		case 2:
			return loc.getEmprestimo().get(5) + "/"
					+ (loc.getEmprestimo().get(2) + 1) + "/"
					+ loc.getEmprestimo().get(1);
		case 3:
			return loc.getDevolucao().get(5) + "/"
					+ (loc.getDevolucao().get(2) + 1) + "/"
					+ loc.getDevolucao().get(1);
		default:
			return loc.getVlrtotal();

		}
	}

}