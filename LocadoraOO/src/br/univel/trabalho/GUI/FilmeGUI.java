/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package br.univel.trabalho.GUI;

import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import br.univel.trabalho.Classes.Banco;
import br.univel.trabalho.Classes.DAO.DAOFilme;
import br.univel.trabalho.Classes.Filme;
import br.univel.trabalho.Classes.Genero;

/**
 *
 * @author Cettrans
 */
public class FilmeGUI extends javax.swing.JDialog {

	TFilme m = new TFilme();
	static Filme f;

	public FilmeGUI(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();
		Banco.listCbx(cbxgenero, "Genero");
		tbFilme.setModel(m);
		excluir.setEnabled(false);
		alterar.setEnabled(false);
		txtDisponivel.setEnabled(false);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jScrollPane1 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		txttitulo = new javax.swing.JTextField();
		cbxcensura = new javax.swing.JComboBox();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		cbxgenero = new javax.swing.JComboBox();
		salvar = new javax.swing.JButton();
		jScrollPane2 = new javax.swing.JScrollPane();
		tbFilme = new javax.swing.JTable();
		jLabel5 = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();
		alterar = new javax.swing.JButton();
		excluir = new javax.swing.JButton();
		txtdlancamento = new javax.swing.JTextField();
		checkLancamento = new javax.swing.JCheckBox();
		jLabel7 = new javax.swing.JLabel();
		txtQuantidade = new javax.swing.JTextField();
		jLabel8 = new javax.swing.JLabel();
		txtDisponivel = new javax.swing.JTextField();

		jTable1.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { null, null, null, null },
						{ null, null, null, null }, { null, null, null, null },
						{ null, null, null, null } }, new String[] { "Title 1",
						"Title 2", "Title 3", "Title 4" }));
		jScrollPane1.setViewportView(jTable1);

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		jLabel1.setText("Título:");

		jLabel2.setText("Censura:");

		cbxcensura.setModel(new javax.swing.DefaultComboBoxModel(new String[] {
				"Livre", "12 Anos", "18 Anos" }));

		jLabel3.setText("Lançamento:");

		jLabel4.setText("Gênero:");

		cbxgenero.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cbxgeneroActionPerformed(evt);
			}
		});

		salvar.setText("Salvar");
		salvar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				salvarActionPerformed(evt);
			}
		});

		tbFilme.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { null, null, null, null },
						{ null, null, null, null }, { null, null, null, null },
						{ null, null, null, null } }, new String[] { "Title 1",
						"Title 2", "Title 3", "Title 4" }));
		tbFilme.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				tbFilmeMouseClicked(evt);
			}
		});
		jScrollPane2.setViewportView(tbFilme);

		jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
		jLabel5.setText("Filme");

		jLabel6.setText("Ano de Lançamento:");

		alterar.setText("Alterar");
		alterar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				alterarActionPerformed(evt);
			}
		});

		excluir.setText("Excluir");
		excluir.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				excluirActionPerformed(evt);
			}
		});

		jLabel7.setText("Quantidade:");

		jLabel8.setText("Disponível:");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addGroup(
																						layout.createSequentialGroup()
																								.addGap(32,
																										32,
																										32)
																								.addGroup(
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.TRAILING)
																												.addComponent(
																														jLabel4)
																												.addComponent(
																														jLabel3)
																												.addComponent(
																														jLabel2)
																												.addComponent(
																														jLabel1)
																												.addComponent(
																														jLabel6)
																												.addComponent(
																														salvar)
																												.addComponent(
																														jLabel7))
																								.addGroup(
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.LEADING)
																												.addGroup(
																														layout.createSequentialGroup()
																																.addPreferredGap(
																																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																.addGroup(
																																		layout.createParallelGroup(
																																				javax.swing.GroupLayout.Alignment.LEADING)
																																				.addComponent(
																																						txttitulo,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						141,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addComponent(
																																						cbxgenero,
																																						javax.swing.GroupLayout.PREFERRED_SIZE,
																																						javax.swing.GroupLayout.DEFAULT_SIZE,
																																						javax.swing.GroupLayout.PREFERRED_SIZE)
																																				.addGroup(
																																						layout.createParallelGroup(
																																								javax.swing.GroupLayout.Alignment.TRAILING,
																																								false)
																																								.addComponent(
																																										txtdlancamento,
																																										javax.swing.GroupLayout.Alignment.LEADING)
																																								.addComponent(
																																										cbxcensura,
																																										javax.swing.GroupLayout.Alignment.LEADING,
																																										0,
																																										javax.swing.GroupLayout.DEFAULT_SIZE,
																																										Short.MAX_VALUE))
																																				.addComponent(
																																						checkLancamento)
																																				.addGroup(
																																						layout.createSequentialGroup()
																																								.addComponent(
																																										txtQuantidade,
																																										javax.swing.GroupLayout.PREFERRED_SIZE,
																																										42,
																																										javax.swing.GroupLayout.PREFERRED_SIZE)
																																								.addGap(32,
																																										32,
																																										32)
																																								.addComponent(
																																										jLabel8)
																																								.addPreferredGap(
																																										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																								.addComponent(
																																										txtDisponivel,
																																										javax.swing.GroupLayout.PREFERRED_SIZE,
																																										48,
																																										javax.swing.GroupLayout.PREFERRED_SIZE))))
																												.addGroup(
																														layout.createSequentialGroup()
																																.addGap(24,
																																		24,
																																		24)
																																.addComponent(
																																		alterar)
																																.addGap(32,
																																		32,
																																		32)
																																.addComponent(
																																		excluir))))
																				.addGroup(
																						layout.createSequentialGroup()
																								.addGap(171,
																										171,
																										171)
																								.addComponent(
																										jLabel5)))
																.addGap(0,
																		64,
																		Short.MAX_VALUE))
												.addComponent(
														jScrollPane2,
														javax.swing.GroupLayout.Alignment.TRAILING,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														390, Short.MAX_VALUE))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addComponent(jLabel5)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel1)
												.addComponent(
														txttitulo,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel2)
												.addComponent(
														cbxcensura,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel3)
												.addComponent(checkLancamento))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel4)
												.addComponent(
														cbxgenero,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel6)
												.addComponent(
														txtdlancamento,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(8, 8, 8)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel7)
												.addComponent(
														txtQuantidade,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jLabel8)
												.addComponent(
														txtDisponivel,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(salvar)
												.addComponent(alterar)
												.addComponent(excluir))
								.addGap(18, 18, 18)
								.addComponent(jScrollPane2,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										260,
										javax.swing.GroupLayout.PREFERRED_SIZE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void salvarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_salvarActionPerformed
		String c;
		int aux1 = 0;
		if (txttitulo.getText().equals("")
				|| txtQuantidade.getText().equals("")
				|| txtdlancamento.getText().equals("")) {
			JOptionPane.showMessageDialog(rootPane, "Existem Campos em Branco");
			return;
		}

		try {
			aux1 = Integer.parseInt(txtdlancamento.getText());
		} catch (NumberFormatException e) {
			JOptionPane.showMessageDialog(rootPane, "Insira apenas números");
			txtdlancamento.requestFocus();
			return;
		}

		int aux2 = 0;
		try {
			aux2 = Integer.parseInt(txtQuantidade.getText());
		} catch (NumberFormatException e) {
			JOptionPane.showMessageDialog(rootPane, "Insira apenas números");
			txtQuantidade.requestFocus();
			return;
		}

		if (cbxgenero.getSelectedItem().equals("Nenhum")) {
			JOptionPane.showMessageDialog(rootPane,
					"Por favor, escolha um Gênero.");
			cbxgenero.requestFocus();
			return;
		}

		GregorianCalendar g = new GregorianCalendar();
		if (aux1 < 1800 || aux1 > g.get(1)) {
			JOptionPane.showMessageDialog(rootPane,
					"Digite uma Data de lançamento válida");
			txtdlancamento.requestFocus();
			return;
		}

		if (aux2 < 0) {
			JOptionPane.showMessageDialog(rootPane,
					"Digite uma Quantidade válida");
			txtQuantidade.requestFocus();
			return;
		}

		switch (cbxcensura.getSelectedItem().toString()) {
		case "12 Anos":
			c = "12 Anos";
			break;
		case "18 Anos":
			c = "18 Anos";
			break;
		default:
			c = "Livre";
			break;
		}
		boolean l;
		l = checkLancamento.isSelected();

		DAOFilme.setFilme(txttitulo.getText(), c, l,
				(Genero) cbxgenero.getSelectedItem(), aux1, aux2);

		JOptionPane.showMessageDialog(rootPane, "Filme cadastrado com sucesso");
		txttitulo.setText("");
		txtQuantidade.setText("");
		cbxcensura.setSelectedItem("Livre");
		checkLancamento.setSelected(false);
		cbxgenero.setSelectedItem("Nenhum");
		txtdlancamento.setText("");
		excluir.setEnabled(false);
		alterar.setEnabled(false);
		m.fireTableDataChanged();
	}// GEN-LAST:event_salvarActionPerformed

	private void alterarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_alterarActionPerformed
		f = DAOFilme.getFilme(tbFilme.getSelectedRow());
		if (f == null)
			JOptionPane.showMessageDialog(rootPane,
					"Pro favor selecione um Filme.");

		if (txttitulo.getText().equals("")
				|| txtQuantidade.getText().equals("")
				|| txtdlancamento.getText().equals("")) {
			JOptionPane.showMessageDialog(rootPane, "Existem Campos em Branco");
			return;
		}

		if (cbxgenero.getSelectedItem().equals("Nenhum")) {
			JOptionPane.showMessageDialog(rootPane, "Selecione um Genero");
			cbxgenero.requestFocus();
			return;
		}

		int aux1 = 0, aux2 = 0;
		try {
			aux1 = Integer.parseInt(txtdlancamento.getText());
		} catch (NumberFormatException e) {
			JOptionPane.showMessageDialog(rootPane, "Insira apenas números");
			txtdlancamento.requestFocus();
			return;
		}

		aux2 = 0;

		try {
			aux2 = Integer.parseInt(txtQuantidade.getText());
		} catch (NumberFormatException e) {
			JOptionPane.showMessageDialog(rootPane, "Insira apenas números");
			txtQuantidade.requestFocus();
			return;
		}

		GregorianCalendar g = new GregorianCalendar();
		if (aux1 < 1800 || aux1 > g.get(1)) {
			JOptionPane.showMessageDialog(rootPane,
					"Digite uma Data de lançamento válida");
			txtdlancamento.requestFocus();
			return;
		}

		if (aux2 < 0) {
			JOptionPane.showMessageDialog(rootPane,
					"Digite uma Quantidade válida");
			txtQuantidade.requestFocus();
			return;
		}

		else {
			int i = JOptionPane.showConfirmDialog(rootPane,
					"Deseja realmente alterar" + " '" + f.getTitulo() + "' ?");
			switch (i) {
			case 0: {
				String c;
				switch (cbxcensura.getSelectedItem().toString()) {
				case "12 Anos": {
					c = "12 Anos";
					break;
				}
				case "18 Anos": {
					c = "18 Anos";
					break;
				}
				default: {
					c = "Livre";
					break;
				}

				}
				boolean l;
				l = checkLancamento.isSelected();

				DAOFilme.updateFilme(txttitulo.getText(), c, l,
						(Genero) cbxgenero.getSelectedItem(), aux1, aux2, f);

				JOptionPane.showMessageDialog(rootPane,
						"Filme Alterado com sucesso");
				txttitulo.setText("");
				txtQuantidade.setText("");
				cbxcensura.setSelectedItem("Livre");
				checkLancamento.setSelected(false);
				cbxgenero.setSelectedItem("Nenhum");
				txtdlancamento.setText("");
				txtDisponivel.setText("");
				excluir.setEnabled(false);
				alterar.setEnabled(false);
				m.fireTableDataChanged();
				return;
			}
			case 1: {
				excluir.setEnabled(false);
				alterar.setEnabled(false);
				return;
			}
			default: {
				txttitulo.setText("");
				txtQuantidade.setText("");
				cbxcensura.setSelectedItem("Livre");
				checkLancamento.setSelected(false);
				cbxgenero.setSelectedItem("Nenhum");
				txtDisponivel.setText("");
				txtdlancamento.setText("");
				excluir.setEnabled(false);
				alterar.setEnabled(false);
				return;
			}
			}

		}
	}// GEN-LAST:event_alterarActionPerformed

	private void tbFilmeMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tbFilmeMouseClicked
		excluir.setEnabled(true);
		alterar.setEnabled(true);
		Filme f = DAOFilme.getFilme(tbFilme.getSelectedRow());
		txttitulo.setText(f.getTitulo());
		String c;
		switch (f.getCensura()) {
		case "12 Anos":
			cbxcensura.setSelectedItem("12 Anos");
			break;
		case "18 Anos":
			cbxcensura.setSelectedItem("18 Anos");
			break;
		default:
			cbxcensura.setSelectedItem("Livre");
			break;
		}
		txtDisponivel.setText(Integer.toString(f.getQtdDisponivel()));
		cbxgenero.setSelectedItem(f.getGenero());
		checkLancamento.setSelected(f.isLancamento());
		txtdlancamento.setText(Integer.toString(f.getDatalancamento()));
		txtQuantidade.setText(Integer.toString(f.getQtd()));
	}// GEN-LAST:event_tbFilmeMouseClicked

	private void excluirActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_excluirActionPerformed
		f = DAOFilme.getFilme(tbFilme.getSelectedRow());
		int i;
		if (Banco.verificaFilme(f)) {
			JOptionPane
					.showMessageDialog(rootPane,
							"Não é possível excluir um filme que está em uma locação Ativa");
			i = 2;
		} else
			i = JOptionPane.showConfirmDialog(rootPane,
					"Deseja realmente excluir" + " '" + f.getTitulo() + " ' ?");
		switch (i) {
		case 0: {
			DAOFilme.deleteFilme(f);
			excluir.setEnabled(false);
			alterar.setEnabled(false);
			JOptionPane.showMessageDialog(rootPane,
					"Filme excluído com sucesso!");
			txttitulo.setText("");
			txtQuantidade.setText("");
			cbxcensura.setSelectedItem("Livre");
			checkLancamento.setSelected(false);
			cbxgenero.setSelectedItem("Nenhum");
			txtDisponivel.setText("");
			txtdlancamento.setText("");
			m.fireTableDataChanged();
			return;
		}
		case 1: {
			alterar.setEnabled(false);
			excluir.setEnabled(false);
			return;
		}
		default: {
			alterar.setEnabled(false);
			excluir.setEnabled(false);
			txttitulo.setText("");
			txtQuantidade.setText("");
			cbxcensura.setSelectedItem("Livre");
			checkLancamento.setSelected(false);
			cbxgenero.setSelectedItem("Nenhum");
			txtDisponivel.setText("");
			txtdlancamento.setText("");
			return;
		}
		}
	}// GEN-LAST:event_excluirActionPerformed

	private void cbxgeneroActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cbxgeneroActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_cbxgeneroActionPerformed

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed"
		// desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(FilmeGUI.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(FilmeGUI.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(FilmeGUI.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(FilmeGUI.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				FilmeGUI dialog = new FilmeGUI(new javax.swing.JFrame(), true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					@Override
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton alterar;
	private javax.swing.JComboBox cbxcensura;
	private javax.swing.JComboBox cbxgenero;
	private javax.swing.JCheckBox checkLancamento;
	private javax.swing.JButton excluir;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JTable jTable1;
	private javax.swing.JButton salvar;
	private javax.swing.JTable tbFilme;
	private javax.swing.JTextField txtDisponivel;
	private javax.swing.JTextField txtQuantidade;
	private javax.swing.JTextField txtdlancamento;
	private javax.swing.JTextField txttitulo;
	// End of variables declaration//GEN-END:variables
}

class TFilme extends AbstractTableModel {

	@Override
	public int getRowCount() {
		return Banco.getHash("Filme").size();
	}

	@Override
	public int getColumnCount() {
		return 6;
	}

	@Override
	public String getColumnName(int i) {
		switch (i) {
		case 0:
			return "Titulo";
		case 1:
			return "Censura";
		case 2:
			return "Lançamento";
		case 3:
			return "Gênero";
		case 4:
			return "Quantidade";
		default:
			return "Data de Lançamento";
		}
	}

	@Override
	public Object getValueAt(int rowIndex, int columnIndex) {
		Filme f = DAOFilme.getFilme(rowIndex);
		switch (columnIndex) {
		case 0:
			return f.getTitulo();
		case 1:
			return f.getCensura();
		case 2: {
			if (f.isLancamento())
				return "Sim";
			else
				return "Não";
		}
		case 3:
			return f.getGenero();
		case 4:
			return f.getQtd();
		default:
			return f.getDatalancamento();

		}
	}

}
